name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 0.9.1-test)'
        required: true
        default: '0.9.1-test'
      create_release:
        description: 'Create GitHub release?'
        required: true
        type: boolean
        default: false

env:
  CARGO_TERM_COLOR: always

jobs:
  build-release:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set version
        id: version
        run: |
          if ("${{ github.event_name }}" -eq "workflow_dispatch") {
            $version = "${{ github.event.inputs.version }}"
          } else {
            $version = "${{ github.ref_name }}"
          }
          echo "VERSION=$version" >> $env:GITHUB_ENV
          echo "version=$version" >> $env:GITHUB_OUTPUT

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Build Release
        run: cargo build --release --verbose

      - name: Install WiX Toolset
        run: |
          choco install wixtoolset -y
          echo "C:\Program Files (x86)\WiX Toolset v3.11\bin" >> $env:GITHUB_PATH

      - name: Build MSI
        run: |
          candle.exe -nologo -ext WixUIExtension -ext WixUtilExtension `
            -dCargoTargetBinDir=target\release `
            -dVersion="${{ env.VERSION }}" `
            main.wxs
          light.exe -nologo -ext WixUIExtension -ext WixUtilExtension `
            -sval -spdb `
            -out vice-snapshot-to-prg-converter-${{ env.VERSION }}-x86_64.msi `
            main.wixobj

      - name: Create Portable Package
        run: |
          # Create package folder
          New-Item -ItemType Directory -Force -Path portable-package
          New-Item -ItemType Directory -Force -Path portable-package\util
          
          # Copy executable
          Copy-Item target\release\vice-snapshot-to-prg-converter.exe portable-package\
          
          # Copy VC++ runtime
          Copy-Item external-utils\vcruntime140.dll portable-package\
          
          # Copy utilities
          Copy-Item external-utils\vasm6502_std.exe portable-package\util\
          Copy-Item external-utils\lzsa.exe portable-package\util\
          
          # Copy licenses
          Copy-Item external-utils\LICENSE-lzsa portable-package\util\
          Copy-Item external-utils\LICENSE-vasm portable-package\util\
          Copy-Item external-utils\LICENSE.cc0.md portable-package\util\
          Copy-Item external-utils\LICENSE.zlib.md portable-package\util\
          
          # Copy documentation
          Copy-Item README.md portable-package\
          Copy-Item CHANGELOG.md portable-package\
          
          # Create portable README
          @"
          VICE Snapshot to PRG Converter - Portable Edition
          ==================================================
          
          Version: ${{ env.VERSION }}
          
          This is a portable version that requires no installation.
          
          HOW TO USE:
          1. Extract this ZIP file to any folder you like
          2. Run vice-snapshot-to-prg-converter.exe
          3. Done!
          
          The program will:
          - Use the "util" folder next to the .exe for tools
          - Create temporary files in your system's temp folder
          - Not write anything to registry or Program Files
          
          REQUIREMENTS:
          - Windows 7 or later (64-bit)
          - Visual C++ Redistributable 2015-2022
            (included as vcruntime140.dll if not already installed)
          
          To completely remove:
          - Just delete the folder you extracted to
          - Optionally clean temp folder: %TEMP%\ViceSnapshotConvert.*
          
          For full documentation, see README.md or visit:
          https://github.com/tommyo123/Vice_Snapshot_to_PRG
          "@ | Out-File -FilePath portable-package\README-PORTABLE.txt -Encoding UTF8
          
          # Create ZIP
          Compress-Archive -Force -Path portable-package\* `
            -DestinationPath vice-snapshot-to-prg-converter-${{ env.VERSION }}-portable.zip

      - name: Upload Build Artifacts (for testing)
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ env.VERSION }}
          path: |
            vice-snapshot-to-prg-converter-${{ env.VERSION }}-x86_64.msi
            vice-snapshot-to-prg-converter-${{ env.VERSION }}-portable.zip
          retention-days: 7

      - name: Create Release
        if: github.event_name == 'push' || github.event.inputs.create_release == 'true'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            vice-snapshot-to-prg-converter-${{ env.VERSION }}-x86_64.msi
            vice-snapshot-to-prg-converter-${{ env.VERSION }}-portable.zip
          body: |
            ## VICE Snapshot to PRG Converter ${{ env.VERSION }}
            
            ### Installation Options
            
            **MSI Installer (Recommended):**
            - Installs to Program Files
            - Creates desktop and Start Menu shortcuts
            - Automatic VC++ runtime handling
            - Download: `vice-snapshot-to-prg-converter-${{ env.VERSION }}-x86_64.msi`
            
            **Portable ZIP:**
            - No installation required
            - Extract and run anywhere
            - Perfect for USB sticks or custom paths
            - Download: `vice-snapshot-to-prg-converter-${{ env.VERSION }}-portable.zip`
            
            ### Security Warning
            
            Windows may show a SmartScreen warning because the installer is not code-signed.
            This is normal for unsigned software. Click "More info" â†’ "Run anyway".
            The source code is available for review.
            
            ### Changes
            
            See [CHANGELOG.md](https://github.com/tommyo123/Vice_Snapshot_to_PRG/blob/main/CHANGELOG.md) for details.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}